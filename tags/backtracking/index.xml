<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>backtracking on Pengjielee&#39;s blog</title>
    <link>https://www.pengjielee.cn/tags/backtracking/</link>
    <description>Recent content in backtracking on Pengjielee&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 25 Apr 2021 09:44:28 +0800</lastBuildDate><atom:link href="https://www.pengjielee.cn/tags/backtracking/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>090.子集II</title>
      <link>https://www.pengjielee.cn/post/leetcode/090.%E5%AD%90%E9%9B%86ii/</link>
      <pubDate>Sun, 25 Apr 2021 09:44:28 +0800</pubDate>
      
      <guid>https://www.pengjielee.cn/post/leetcode/090.%E5%AD%90%E9%9B%86ii/</guid>
      <description>题目 给你一个整数数组 nums ，其中可能包含重复元素，请你返回该数组所有可能的子集（幂集）。
解集 不能 包含重复的子集。返回的解集中，子集可以按 任意顺序 排列。
示例 1： 输入：nums = [1,2,2] 输出：[[],[1],[1,2],[1,2,2],[2],[2,2]] 示例 2： 输入：nums = [0] 输出：[[],[0]] 提示：
1 &amp;lt;= nums.length &amp;lt;= 10 -10 &amp;lt;= nums[i] &amp;lt;= 10 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/subsets-ii 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
JS实现 /** * @param {number[]} nums * @return {number[][]} */ var subsetsWithDup = function(nums) { const result = []; const len = nums.length; if (len === 0) { return result; } // 排序 nums = nums.</description>
    </item>
    
    <item>
      <title>078.子集</title>
      <link>https://www.pengjielee.cn/post/leetcode/078.%E5%AD%90%E9%9B%86/</link>
      <pubDate>Sun, 25 Apr 2021 09:44:01 +0800</pubDate>
      
      <guid>https://www.pengjielee.cn/post/leetcode/078.%E5%AD%90%E9%9B%86/</guid>
      <description>题目 给你一个整数数组 nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。
解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。
示例 1： 输入：nums = [1,2,3] 输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]] 示例 2： 输入：nums = [0] 输出：[[],[0]] 提示：
1 &amp;lt;= nums.length &amp;lt;= 10 -10 &amp;lt;= nums[i] &amp;lt;= 10 nums 中的所有元素 互不相同 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/subsets 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
补充 子集：2^n 真子集：2^n - 1 非空子集：2^n - 1 非空真子集：2^n - 2
JS实现 1、递归
/** * @param {number[]} nums * @return {number[][]} */ var subsets = function (nums) { const result = []; const len = nums.</description>
    </item>
    
    <item>
      <title>017.电话号码的字母组合</title>
      <link>https://www.pengjielee.cn/post/leetcode/017.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</link>
      <pubDate>Fri, 23 Apr 2021 14:51:53 +0800</pubDate>
      
      <guid>https://www.pengjielee.cn/post/leetcode/017.%E7%94%B5%E8%AF%9D%E5%8F%B7%E7%A0%81%E7%9A%84%E5%AD%97%E6%AF%8D%E7%BB%84%E5%90%88/</guid>
      <description>题目 给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。
给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
1(!@#) 2(abc) 3(def) 4(ghi) 5(jkl) 6(mno) 7(pqrs) 8(tuv) 9(wxyz) *(+) 0(-) # 示例 1： 输入：digits = &amp;#34;23&amp;#34; 输出：[&amp;#34;ad&amp;#34;,&amp;#34;ae&amp;#34;,&amp;#34;af&amp;#34;,&amp;#34;bd&amp;#34;,&amp;#34;be&amp;#34;,&amp;#34;bf&amp;#34;,&amp;#34;cd&amp;#34;,&amp;#34;ce&amp;#34;,&amp;#34;cf&amp;#34;] 示例 2： 输入：digits = &amp;#34;&amp;#34; 输出：[] 示例 3： 输入：digits = &amp;#34;2&amp;#34; 输出：[&amp;#34;a&amp;#34;,&amp;#34;b&amp;#34;,&amp;#34;c&amp;#34;] 提示：
0 &amp;lt;= digits.length &amp;lt;= 4 digits[i] 是范围 [&amp;lsquo;2&amp;rsquo;, &amp;lsquo;9&amp;rsquo;] 的一个数字。 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
补充 String.prototype.slice()
slice() 方法提取某个字符串的一部分，并返回一个新的字符串，且不会改动原字符串。
str.slice(beginIndex[, endIndex]) beginIndex 从该索引（以 0 为基数）处开始提取原字符串中的字符。如果值为负数，会被当做 strLength + beginIndex 看待，这里的strLength 是字符串的长度（例如， 如果 beginIndex 是 -3 则看作是：strLength - 3）</description>
    </item>
    
  </channel>
</rss>
