<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>sum on Pengjielee&#39;s blog</title>
    <link>https://www.pengjielee.cn/tags/sum/</link>
    <description>Recent content in sum on Pengjielee&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Tue, 13 Jul 2021 16:20:48 +0800</lastBuildDate><atom:link href="https://www.pengjielee.cn/tags/sum/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>016.最接近的三数之和</title>
      <link>https://www.pengjielee.cn/post/leetcode/016.%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Tue, 13 Jul 2021 16:20:48 +0800</pubDate>
      
      <guid>https://www.pengjielee.cn/post/leetcode/016.%E6%9C%80%E6%8E%A5%E8%BF%91%E7%9A%84%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>题目 给定一个包括 n 个整数的数组 nums 和 一个目标值 target。找出 nums 中的三个整数，使得它们的和与 target 最接近。返回这三个数的和。假定每组输入只存在唯一答案。
示例：
输入：nums = [-1,2,1,-4], target = 1 输出：2 解释：与 target 最接近的和是 2 (-1 + 2 + 1 = 2) 。 提示：
3 &amp;lt;= nums.length &amp;lt;= 10^3 -10^3 &amp;lt;= nums[i] &amp;lt;= 10^3 -10^4 &amp;lt;= target &amp;lt;= 10^4
来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/3sum-closest 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
JS实现 /** * @param {number[]} nums * @param {number} target * @return {number} */ /** * @param {number[]} nums * @param {number} target * @return {number} */ var threeSumClosest = function (nums, target) { if (nums.</description>
    </item>
    
    <item>
      <title>018.四数之和</title>
      <link>https://www.pengjielee.cn/post/leetcode/018.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Wed, 12 May 2021 11:06:29 +0800</pubDate>
      
      <guid>https://www.pengjielee.cn/post/leetcode/018.%E5%9B%9B%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>题目 给定一个包含 n 个整数的数组 nums 和一个目标值 target，判断 nums 中是否存在四个元素 a，b，c 和 d ，使得 a + b + c + d 的值与 target 相等？找出所有满足条件且不重复的四元组。
注意：答案中不可以包含重复的四元组。
示例 1： 输入：nums = [1,0,-1,0,-2,2], target = 0 输出：[[-2,-1,1,2],[-2,0,0,2],[-1,0,0,1]] 示例 2： 输入：nums = [], target = 0 输出：[] 提示：
0 &amp;lt;= nums.length &amp;lt;= 200 -10^9 &amp;lt;= nums[i] &amp;lt;= 10^9 -10^9 &amp;lt;= target &amp;lt;= 10^9 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/4sum 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
JS实现 /** * @param {number[]} nums * @param {number} target * @return {number[][]} */ var fourSum = function (nums, target) { const result = [``]; //如果小于4个数，直接返回空数组 if (nums.</description>
    </item>
    
    <item>
      <title>015.三数之和</title>
      <link>https://www.pengjielee.cn/post/leetcode/015.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Thu, 15 Apr 2021 14:14:02 +0800</pubDate>
      
      <guid>https://www.pengjielee.cn/post/leetcode/015.%E4%B8%89%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>题目 给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有和为 0 且不重复的三元组。
注意：答案中不可以包含重复的三元组。
示例 1： 输入：nums = [-1,0,1,2,-1,-4] 输出：[[-1,-1,2],[-1,0,1]] 示例 2： 输入：nums = [] 输出：[] 示例 3： 输入：nums = [0] 输出：[] 提示：
0 &amp;lt;= nums.length &amp;lt;= 3000 -10^5 &amp;lt;= nums[i] &amp;lt;= 10^5
来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/3sum 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
JS实现 /** * @param {number[]} nums * @return {number[][]} */ var threeSum = function (nums) { let result = []; // 传入数组为null直接返回result if (nums === null) { return result; } const len = nums.</description>
    </item>
    
    <item>
      <title>001.两数之和</title>
      <link>https://www.pengjielee.cn/post/leetcode/001.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</link>
      <pubDate>Tue, 16 Mar 2021 15:28:54 +0800</pubDate>
      
      <guid>https://www.pengjielee.cn/post/leetcode/001.%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</guid>
      <description>题目 给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。
你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。
你可以按任意顺序返回答案。
示例 1： 输入：nums = [2,7,11,15], target = 9 输出：[0,1] 解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。 示例 2： 输入：nums = [3,2,4], target = 6 输出：[1,2] 示例 3： 输入：nums = [3,3], target = 6 输出：[0,1] 提示：
2 &amp;lt;= nums.length &amp;lt;= 10^3 -10^9 &amp;lt;= nums[i] &amp;lt;= 10^9 -10^9 &amp;lt;= target &amp;lt;= 10^9 只会存在一个有效答案 来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/two-sum 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
JS实现 /** * @param {number[]} nums * @param {number} target * @return {number[]} */ var twoSum = function (nums, target) { // 创建一个hashmap const map = new Map(); // 遍历数组 for (let i = 0; i &amp;lt; nums.</description>
    </item>
    
  </channel>
</rss>
